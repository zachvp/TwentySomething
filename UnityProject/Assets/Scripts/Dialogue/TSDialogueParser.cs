//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/** 
* This class uses a singleton design pattern to parse a given XML file
*/

using System;
using System.Xml;
using System.IO;
using System.Collections.Generic;

public sealed class TSDialogueParser {
	public static string debug;

	private static readonly TSDialogueParser instance = new TSDialogueParser();
	private static string path;

	//private static Dictionary<>;

	private const string kPathToXMLDirectory = "/UnityProject/Assets/Dialogue/XML/";
	private const string kXMLExtension 		 = ".xml";
		
	private TSDialogueParser () {}

	public static TSDialogueParser Instance { get { return instance; } }

	public void Parse(string filename) {
		Console.Write("Parse ");
		Console.WriteLine(filename);

		XmlDocument doc = new XmlDocument();
		path = Directory.GetParent(Environment.CurrentDirectory).FullName + 
			   kPathToXMLDirectory + filename + kXMLExtension;
		//debug = System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase );
		//debug = System.IO.Path.GetDirectoryName(
		doc.Load(path);

		XmlNode rootNode = doc.DocumentElement.SelectSingleNode("/dialogue");

		XmlNode nameNode = rootNode.SelectSingleNode("name"); debug += nameNode.InnerText + "\n";
		XmlNode questionNode = rootNode.SelectSingleNode("question"); debug += questionNode.InnerText + "\n\n";
		
		XmlNodeList responses = rootNode.SelectNodes("response");

		foreach (XmlNode response in responses) {
			debug += response.InnerText;
			if (response.Attributes["stamina"] != null)
				debug += " - " + response.Attributes["stamina"].Value.ToString() + " stamina\n";
		}

		//debug = nameNode.Attributes["stamina"].Value;
	}
}
