//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/** 
* This class uses a singleton design pattern to parse a given XML file
*/

using System;
using System.Xml;
using System.IO;
using System.Collections.Generic;

namespace Dialogue {
	public sealed class TSDialogueParser {
		public static string debug;

		private static readonly TSDialogueParser _instance = new TSDialogueParser();
		private static string _path;

		private const string kPathToXMLDirectory = "/UnityProject/Assets/Dialogue/XML/";
		private const string kXMLExtension 		 = ".xml";

		private const string kDialogueNodeName   = "dialogue";
		private const string kNameNodeName   	 = "name";
		private const string kQuestionNodeName 	 = "question";
		private const string kResponseNodeName 	 = "response";

		private const string kStaminaAttributeName = "stamina";
			
		private TSDialogueParser () {}

		public static TSDialogueParser Instance { get { return _instance; } }

		public void Parse(string filename) {
			Console.Write("Parse ");
			Console.WriteLine(filename);

			XmlDocument doc = new XmlDocument();
			_path = Directory.GetParent(Environment.CurrentDirectory).FullName + 
				   kPathToXMLDirectory + filename + kXMLExtension;
			//debug = System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase );
			//debug = System.IO.Path.GetDirectoryName(
			doc.Load(_path);

			XmlNode rootNode = doc.DocumentElement.SelectSingleNode("/" + kDialogueNodeName);

			XmlNode nameNode = rootNode.SelectSingleNode(kNameNodeName); debug += nameNode.InnerText + "\n";
			XmlNode questionNode = rootNode.SelectSingleNode(kQuestionNodeName); debug += questionNode.InnerText + "\n\n";
			
			XmlNodeList responses = rootNode.SelectNodes(kResponseNodeName);

			foreach (XmlNode response in responses) {
				debug += response.InnerText;
				if (response.Attributes[kStaminaAttributeName] != null)
					debug += " - " + response.Attributes[kStaminaAttributeName].Value.ToString() + " stamina\n";
			}

			//debug = nameNode.Attributes["stamina"].Value;
		}
	}
}